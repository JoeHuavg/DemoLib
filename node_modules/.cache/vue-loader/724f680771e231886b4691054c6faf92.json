{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\system\\menus\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\system\\menus\\index.vue","mtime":1630326254236},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  queryMenu,\r\n  createMenu,\r\n  updateMenu,\r\n  deleteMenu\r\n} from '@/api/system/menus'\r\nimport { getOption } from '@/api/system/options'\r\nimport { queryPower } from '@/api/system/powers'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport IconSelect from '@/components/IconSelect'\r\nexport default {\r\n  name: 'menus',\r\n  components: { Treeselect, IconSelect },\r\n  data() {\r\n    return {\r\n      // 遮罩层\r\n      loading: true,\r\n      // 菜单表格树数据\r\n      menuList: [],\r\n      // 菜单树选项\r\n      menuOptions: [],\r\n      // 菜单树选项\r\n      powerOptions: [],\r\n      // 弹出层标题\r\n      title: '',\r\n      // 是否显示弹出层\r\n      open: false,\r\n      // 归属系统选项\r\n      systemOptions: [],\r\n      // 查询参数\r\n      queryParams: {\r\n        name: undefined\r\n      },\r\n      // 表单参数\r\n      form: {},\r\n      // 表单校验\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '菜单名称不能为空', trigger: 'blur' }\r\n        ],\r\n        sortIndex: [\r\n          { required: true, message: '菜单顺序不能为空', trigger: 'blur' }\r\n        ],\r\n        path: [{ required: true, message: '路由地址不能为空', trigger: 'blur' }]\r\n      },\r\n      // 搜索条显示\r\n      searchToggle: true\r\n    }\r\n  },\r\n  computed: {\r\n    size() {\r\n      return this.$store.getters.size\r\n    }\r\n  },\r\n  created() {\r\n    getOption('SYSTEM_MENU_SYSTEM').then(response => {\r\n      this.systemOptions = response.data\r\n    })\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    loadOptions({ action, parentNode, callback }) {},\r\n    // 选择图标\r\n    selected(name) {\r\n      this.form.icon = name\r\n    },\r\n\r\n    handleSearch() {\r\n      this.searchToggle = !this.searchToggle\r\n    },\r\n    /** 查询菜单列表 */\r\n    getList() {\r\n      this.loading = true\r\n      queryMenu(this.queryParams).then(response => {\r\n        this.menuList = response.data\r\n        this.loading = false\r\n      })\r\n    },\r\n    /** 转换菜单数据结构 */\r\n    normalizer(node) {\r\n      if (node.children && !node.children.length) {\r\n        delete node.children\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children\r\n      }\r\n    },\r\n    /** 查询菜单下拉树结构 */\r\n    getTreeselect() {\r\n      queryMenu({}).then(response => {\r\n        this.menuOptions = []\r\n        const menu = {\r\n          id: '-1',\r\n          name: '根菜单',\r\n          children: [],\r\n          hasChildren: true\r\n        }\r\n        menu.children = response.data\r\n        this.menuOptions.push(menu)\r\n      })\r\n    },\r\n    // 取消按钮\r\n    cancel() {\r\n      this.open = false\r\n      this.reset()\r\n      this.getList()\r\n    },\r\n    // 表单重置\r\n    reset() {\r\n      this.form = {\r\n        id: undefined,\r\n        parentUID: '-1',\r\n        name: undefined,\r\n        icon: undefined,\r\n        sortIndex: 1,\r\n        isFrame: false,\r\n        hidden: false,\r\n        keepAlive: false,\r\n        system: 0\r\n      }\r\n    },\r\n    /** 重置按钮操作 */\r\n    handleReset() {\r\n      this.queryParams.name = ''\r\n      this.getList()\r\n    },\r\n    /** 搜索按钮操作 */\r\n    handleQuery() {\r\n      this.getList()\r\n    },\r\n    /** 新增按钮操作 */\r\n    handleCreate(id) {\r\n      this.reset()\r\n      this.getTreeselect()\r\n      this.form.parentUID = id\r\n      this.open = true\r\n      this.title = '添加菜单'\r\n    },\r\n    /** 修改按钮操作 */\r\n    handleUpdate(row) {\r\n      this.reset()\r\n      this.getTreeselect()\r\n      row.parentUID = row.parentUID === null ? '-1' : row.parentUID\r\n      this.form = row\r\n      this.open = true\r\n      this.title = '修改菜单'\r\n    },\r\n    /** 提交按钮 */\r\n    submitForm: function() {\r\n      this.$refs['form'].validate(valid => {\r\n        if (valid) {\r\n          if (this.form.id !== undefined) {\r\n            updateMenu(this.form).then(response => {\r\n              if (response.statusCode === 200) {\r\n                this.$message({\r\n                  message: '修改成功',\r\n                  type: 'success'\r\n                })\r\n                this.open = false\r\n                this.getList()\r\n              }\r\n            })\r\n          } else {\r\n            createMenu(this.form).then(response => {\r\n              if (response.statusCode === 200) {\r\n                this.$message({\r\n                  message: '新增成功',\r\n                  type: 'success'\r\n                })\r\n                this.open = false\r\n                this.getList()\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /** 删除按钮操作 */\r\n    handleDelete(row) {\r\n      this.$confirm('是否确认删除名称为\"' + row.name + '\"的数据项?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          deleteMenu(row.id).then(response => {\r\n            if (response.statusCode === 200) {\r\n              this.getList()\r\n              this.$message({\r\n                message: '删除成功',\r\n                type: 'success'\r\n              })\r\n            }\r\n          })\r\n        })\r\n        .catch(function() {})\r\n    },\r\n    // 转化表格内容是否为外链\r\n    isFrameformat(row, column) {\r\n      if (row.isFrame === true) {\r\n        return '是'\r\n      } else {\r\n        return '否'\r\n      }\r\n    },\r\n    // 转化表格内容是否为显示\r\n    Hiddenformat(row, column) {\r\n      if (row.hidden === true) {\r\n        return '隐藏'\r\n      } else {\r\n        return '显示'\r\n      }\r\n    },\r\n    // 转化是否缓存\r\n    Aliveformat(row, column) {\r\n      if (row.keepAlive === true) {\r\n        return '是'\r\n      } else {\r\n        return '否'\r\n      }\r\n    },\r\n\r\n    handlePowerSearch(queryString, cb) {\r\n      queryPower({ name: queryString }).then(response => {\r\n        cb(response.data.dataSource)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}