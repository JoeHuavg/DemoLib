{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\center\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\center\\index.vue","mtime":1630326254245},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { isvalidPhone } from '@/utils/validate'\r\nimport { getUserInfo } from '@/api/login'\r\nimport { updateUser, updatePassword } from '@/api/users/usercenter'\r\nimport { getToken } from '@/utils/auth'\r\nexport default {\r\n  name: 'center',\r\n  data() {\r\n    // 自定义验证\r\n    const validPhone = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请输入电话号码'))\r\n      } else if (!isvalidPhone(value)) {\r\n        callback(new Error('请输入正确的11位手机号码'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      // 查询参数\r\n      queryParams: {\r\n        queryText: undefined,\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        orderby: 'userID',\r\n        sort: 'descending'\r\n      },\r\n      // 标签页\r\n      activeName: 'user',\r\n      // 上传链接\r\n      avatarUploadUrl:\r\n        process.env.VUE_APP_BASE_API + '/userCenter/AvatarUpload',\r\n      headers: { SYSTOKEN: getToken() },\r\n      // 加载中\r\n      loading: false,\r\n      // 图片路径\r\n      imageUrl: '',\r\n      // 用户信息列表\r\n      userForm: {},\r\n      // 密码列表\r\n      passwordForm: {},\r\n      // 校验规则\r\n      rules: {\r\n        nickName: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户昵称',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 2,\r\n            max: 20,\r\n            message: '长度在 2 到 20 个字符',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        phone: [{ required: true, trigger: 'blur', validator: validPhone }]\r\n      },\r\n      // 重置密码表单校验\r\n      passwordRules: {\r\n        currentPassword: [\r\n          { required: true, message: '原密码不能为空', trigger: 'blur' },\r\n          { min: 6, message: '用户密码长度至少6位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '用户密码不能为空', trigger: 'blur' },\r\n          { min: 6, message: '用户密码长度至少6位', trigger: 'blur' }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\r\n          { min: 6, message: '用户密码长度至少6位', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserInfo()\r\n  },\r\n  methods: {\r\n    // 获取用户信息\r\n    getUserInfo() {\r\n      getUserInfo().then(response => {\r\n        this.userForm = response.data\r\n      })\r\n    },\r\n    // 点击确定按钮\r\n    handleSubmit: function() {\r\n      this.$refs['form'].validate(valid => {\r\n        if (valid) {\r\n          updateUser(this.userForm).then(response => {\r\n            this.loading = true\r\n            if (response.statusCode === 200) {\r\n              this.$message({\r\n                message: '修改成功',\r\n                type: 'success'\r\n              })\r\n              this.getUserInfo()\r\n            }\r\n            this.loading = false\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 修改密码提交\r\n    submitPasswordForm() {\r\n      this.$refs['passwordForm'].validate(valid => {\r\n        if (valid) {\r\n          if (\r\n            this.passwordForm.newPassword !== this.passwordForm.confirmPassword\r\n          ) {\r\n            this.$message.error('两次密码输入不一致')\r\n            return\r\n          }\r\n          updatePassword({\r\n            currentPassword: this.passwordForm.currentPassword,\r\n            confirmPassword: this.passwordForm.confirmPassword\r\n          }).then(response => {\r\n            if (response.statusCode === 200) {\r\n              this.$message({\r\n                message: '密码重置成功',\r\n                type: 'success'\r\n              })\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 图片上传成功\r\n    handleAvatarSuccess(response, file) {\r\n      if (response.statusCode === 200) {\r\n        this.getUserInfo()\r\n        this.$message({\r\n          message: '图片上传成功',\r\n          type: 'success'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}