{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\basic\\productline\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\basic\\productline\\index.vue","mtime":1630326254225},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _productline = require(\"@/api/basic/productline\");\n\nvar _workshop = require(\"@/api/basic/workshop\");\n\nvar _productprocess = require(\"@/api/basic/productprocess\");\n\nvar _factory = require(\"@/api/basic/factory\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'productline',\n  data: function data() {\n    return {\n      // 是否显示弹出层\n      open: false,\n      // 表单\n      form: {},\n      // 表单标题\n      title: '',\n      // 显示搜索\n      searchToggle: true,\n      // 表格高度\n      tableHeight: window.innerHeight,\n      // 合计条数\n      total: 0,\n      // 遮罩层\n      loading: true,\n      // 查询参数\n      queryParams: {\n        queryText: undefined,\n        pageIndex: 1,\n        pageSize: 10,\n        orderby: '[lineNo]',\n        sort: 'descending'\n      },\n      // 设备列表\n      dataProductline: [],\n      // 表单校验\n      rules: {\n        lineNo: [{\n          required: true,\n          message: '设备编号不能为空',\n          trigger: 'blur'\n        }],\n        lineName: [{\n          required: true,\n          message: '设备名称不能为空',\n          trigger: 'blur'\n        }],\n        workShopUID: [{\n          required: true,\n          message: '所属车间不能为空',\n          trigger: 'blur'\n        }],\n        factoryUID: [{\n          required: true,\n          message: '所属工厂不能为空',\n          trigger: 'blur'\n        }],\n        processUID: [{\n          required: true,\n          message: '所属工厂不能为空',\n          trigger: 'blur'\n        }]\n      },\n      // 所属工序列表\n      processOption: [],\n      // 所属工厂列表\n      factoryOption: [],\n      // 所属车间列表\n      workShopOption: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    (0, _factory.getAllFactory)(true).then(function (response) {\n      _this.factoryOption = response.data;\n    });\n    (0, _workshop.getAllWorkshop)(true).then(function (response) {\n      _this.workShopOption = response.data;\n    });\n    (0, _productprocess.getAllProductprocess)(true).then(function (response) {\n      _this.processOption = response.data;\n    });\n  },\n  methods: {\n    /** 查询设备列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      (0, _productline.queryProductline)(this.queryParams).then(function (response) {\n        _this2.dataProductline = response.data.dataSource;\n        _this2.total = response.data.totalCount;\n        _this2.loading = false;\n      });\n    },\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    handleReset: function handleReset() {\n      this.queryParams.queryText = '';\n      this.getList();\n    },\n\n    /** 新增按钮操作 */\n    handleCreate: function handleCreate() {\n      this.reset();\n      this.open = true;\n      this.title = '添加设备';\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      this.reset();\n      this.form = row;\n      this.open = true;\n      this.title = '修改设备';\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this3 = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.lineName + '\"的设备?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _productline.deleteProductline)(row.id).then(function (response) {\n          if (response.statusCode === 200) {\n            _this3.getList();\n\n            _this3.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this4 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this4.form.id !== undefined) {\n            (0, _productline.updateProductline)(_this4.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this4.$message({\n                  message: '修改成功',\n                  type: 'success'\n                });\n\n                _this4.open = false;\n\n                _this4.getList();\n              }\n            });\n          } else {\n            (0, _productline.createProductline)(_this4.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this4.$message({\n                  message: '新增成功',\n                  type: 'success'\n                });\n\n                _this4.open = false;\n\n                _this4.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n    // 显示搜索\n    handleSearch: function handleSearch() {\n      this.searchToggle = !this.searchToggle;\n    },\n    // 排序操作\n    handleSortable: function handleSortable(val) {\n      this.queryParams.orderby = val.prop;\n      this.queryParams.sort = val.order;\n      this.getList();\n    },\n    // 选择所属工厂\n    handleSelectFactory: function handleSelectFactory() {\n      this.form.processUID = undefined;\n      this.form.workShopUID = undefined;\n    },\n    // 选择所属车间\n    handleSelectWorkShop: function handleSelectWorkShop() {\n      this.form.processUID = undefined;\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        lineName: undefined,\n        lineNo: undefined,\n        createID: undefined,\n        createName: undefined,\n        createTime: undefined,\n        enable: true,\n        id: undefined,\n        remark: undefined,\n        updateID: undefined,\n        updateName: undefined,\n        updateTime: undefined,\n        processUID: undefined,\n        factoryUID: undefined,\n        workShopUID: undefined\n      };\n    },\n    // 自动计算分页 Id\n    handleIndexCalc: function handleIndexCalc(index) {\n      return (this.queryParams.pageIndex - 1) * this.queryParams.pageSize + index + 1;\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n      this.getList();\n    },\n    // 过滤车间\n    filterWorkshop: function filterWorkshop(data, search) {\n      return data.filter(function (m) {\n        return m.factoryUID === search;\n      });\n    },\n    // 过滤设备\n    filterProcess: function filterProcess(data, search) {\n      return data.filter(function (m) {\n        return m.workShopUID === search;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}