{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\rolepowers\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\rolepowers\\index.vue","mtime":1630326254246},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _rolepowers = require(\"@/api/users/rolepowers\");\n\nvar _roles = require(\"@/api/users/roles\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'rolepowers',\n  data: function data() {\n    return {\n      // 表格高度\n      tableHeight: window.innerHeight,\n      // 角色列表遮罩层\n      loadingRole: true,\n      // 权限列表遮罩层\n      loadingPower: true,\n      // 权限列表\n      dataPowerResult: [],\n      // 角色列表\n      dataRoleResult: [],\n      // 角色id\n      roleId: undefined,\n      // 过滤查询\n      search: '',\n      // 右键当前行\n      powerColmun: [] // 页面布局\n\n    };\n  },\n  computed: {\n    size: function size() {\n      return this.$store.getters.size;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    (0, _rolepowers.getPowersGroup)().then(function (response) {\n      _this.dataPowerResult = response.data;\n      _this.loadingPower = false;\n    });\n    (0, _roles.getRoles)().then(function (response) {\n      _this.dataRoleResult = response.data;\n\n      _this.handleSelectRole(_this.dataRoleResult[0]);\n\n      _this.$refs.roleTable.setCurrentRow(_this.dataRoleResult[0]);\n\n      _this.loadingRole = false;\n    });\n  },\n  methods: {\n    // 选择角色\n    handleSelectRole: function handleSelectRole(row) {\n      var _this2 = this;\n\n      this.roleId = row.id;\n      (0, _rolepowers.getRolePowers)(this.roleId).then(function (response) {\n        _this2.dataPowerResult.forEach(function (v) {\n          v.powers.forEach(function (sub) {\n            if (response.data.indexOf(sub.id) === -1) {\n              sub.checked = false;\n            } else {\n              sub.checked = true;\n            }\n          });\n        });\n      });\n    },\n    // 全选\n    handleSelectAll: function handleSelectAll() {\n      this.UpdateRolePowers(true);\n    },\n    // 取消全选\n    handleUnSelectAll: function handleUnSelectAll() {\n      this.UpdateRolePowers(false);\n    },\n    // 保存权限\n    handleSubmit: function handleSubmit() {\n      var _this3 = this;\n\n      (0, _rolepowers.updateRolePowers)({\n        roleId: this.roleId,\n        powerIds: this.getSelectPowerIds()\n      }).then(function (response) {\n        _this3.search = '';\n\n        if (response.statusCode === 200) {\n          _this3.$message({\n            message: '修改成功',\n            type: 'success'\n          });\n        }\n      });\n    },\n    // 全选行\n    handleSelectColmun: function handleSelectColmun() {\n      this.powerColmun.powers.forEach(function (v) {\n        v.checked = true;\n      });\n    },\n    // 取消全选行\n    handleUnSelectColmun: function handleUnSelectColmun() {\n      this.powerColmun.powers.forEach(function (v) {\n        v.checked = false;\n      });\n    },\n    // 更新所有选中状态\n    UpdateRolePowers: function UpdateRolePowers(value) {\n      this.dataPowerResult.forEach(function (v) {\n        v.powers.forEach(function (sub) {\n          sub.checked = value;\n        });\n      });\n    },\n    // 获得勾选的id\n    getSelectPowerIds: function getSelectPowerIds() {\n      var powerIds = [];\n      this.dataPowerResult.forEach(function (v) {\n        v.powers.forEach(function (sub) {\n          if (sub.checked) {\n            powerIds.push(sub.id);\n          }\n        });\n      });\n      return powerIds;\n    },\n    // 右键显示菜单\n    openContextMenu: function openContextMenu(row, column, event) {\n      var _this4 = this;\n\n      // 阻止右键默认行为\n      event.preventDefault();\n      this.$nextTick(function () {\n        _this4.$refs.contextMenu.bindShowEvents(event);\n      });\n      this.powerColmun = row;\n    }\n  }\n};\nexports.default = _default;",null]}