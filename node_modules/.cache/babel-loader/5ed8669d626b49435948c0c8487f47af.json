{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\system\\powers\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\system\\powers\\index.vue","mtime":1630326254241},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Amazarashi/Documents/P_Project/Clothes/\\u540E\\u53F0/Design/Meiam.System/Meiam.System.Web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _powers = require(\"@/api/system/powers\");\n\nvar _options = require(\"@/api/system/options\");\n\nvar _menus = require(\"@/api/system/menus\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'powers',\n  components: {\n    Treeselect: _vueTreeselect.default\n  },\n  data: function data() {\n    return {\n      // 表格高度\n      tableHeight: window.innerHeight - 275,\n      // 遮罩层\n      loading: true,\n      // 返回结果集\n      dataResult: [],\n      // 菜单树选项\n      menuOptions: [],\n      // 权限描述选择框\n      descriptionOptions: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 合计条数\n      total: 0,\n      // 查询参数\n      queryParams: {\n        name: undefined,\n        pageIndex: 1,\n        pageSize: 10,\n        orderby: 'createTime',\n        sort: 'descending'\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        name: [{\n          required: true,\n          message: '权限名称不能为空',\n          trigger: 'blur'\n        }],\n        page: [{\n          required: true,\n          message: '权限所属的系统页面不能为空',\n          trigger: 'blur'\n        }],\n        description: [{\n          required: true,\n          message: '权限描述不能为空',\n          trigger: 'blur'\n        }]\n      },\n      // 搜索条显示\n      searchToggle: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    (0, _options.getOption)('SYSTEM_POWER_DESCRIPTION').then(function (response) {\n      _this.descriptionOptions = response.data;\n    });\n    this.getList();\n  },\n  methods: {\n    loadOptions: function loadOptions(_ref) {\n      var action = _ref.action,\n          parentNode = _ref.parentNode,\n          callback = _ref.callback;\n    },\n    // 隐藏搜索\n    handleSearch: function handleSearch() {\n      this.searchToggle = !this.searchToggle;\n    },\n\n    /** 查询列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      (0, _powers.queryPower)(this.queryParams).then(function (response) {\n        _this2.dataResult = response.data;\n        _this2.total = _this2.dataResult.totalCount;\n        _this2.loading = false;\n      });\n    },\n\n    /** 转换菜单数据结构 */\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.name,\n        label: node.name,\n        children: node.children\n      };\n    },\n\n    /** 查询菜单下拉树结构 */\n    getTreeselect: function getTreeselect() {\n      var _this3 = this;\n\n      (0, _menus.queryMenu)({}).then(function (response) {\n        _this3.menuOptions = response.data;\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        id: undefined,\n        name: undefined,\n        page: undefined,\n        description: undefined,\n        remark: undefined\n      };\n    },\n\n    /** 重置按钮操作 */\n    handleReset: function handleReset() {\n      this.queryParams.name = '';\n      this.getList();\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 新增按钮操作 */\n    handleCreate: function handleCreate(row) {\n      this.reset();\n      this.getTreeselect();\n      this.open = true;\n      this.title = '添加权限';\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      this.reset();\n      this.getTreeselect();\n      this.form = row;\n      this.open = true;\n      this.title = '修改权限';\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this4 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this4.form.id !== undefined) {\n            (0, _powers.updatePower)(_this4.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this4.$message({\n                  message: '修改成功',\n                  type: 'success'\n                });\n\n                _this4.open = false;\n\n                _this4.getList();\n              }\n            });\n          } else {\n            (0, _powers.createPower)(_this4.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this4.$message({\n                  message: '新增成功',\n                  type: 'success'\n                });\n\n                _this4.open = false;\n\n                _this4.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this5 = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.name + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _powers.deletePower)(row.id).then(function (response) {\n          if (response.statusCode === 200) {\n            _this5.getList();\n\n            _this5.$message({\n              message: '删除成功',\n              type: 'success'\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    // 自动计算分页 Id\n    handleIndexCalc: function handleIndexCalc(index) {\n      return (this.queryParams.pageIndex - 1) * this.queryParams.pageSize + index + 1;\n    },\n    // 排序操作\n    handleSortable: function handleSortable(val) {\n      this.queryParams.orderby = val.prop;\n      this.queryParams.sort = val.order;\n      this.getList();\n    }\n  }\n};\nexports.default = _default;",null]}