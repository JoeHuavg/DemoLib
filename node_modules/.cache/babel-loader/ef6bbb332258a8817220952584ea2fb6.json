{"remainingRequest":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\users\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\src\\views\\users\\users\\index.vue","mtime":1630326254251},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Amazarashi\\Documents\\P_Project\\Clothes\\后台\\Design\\Meiam.System\\Meiam.System.Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _users = require(\"@/api/users/users\");\n\nvar _authorize = require(\"@/api/system/authorize\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'users',\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: false,\n      // 默认选项卡\n      activeName: 'userInfo',\n      // 表格高度\n      tableHeight: window.innerHeight,\n      // 单选框\n      radio: '1',\n      // 搜索条显示\n      searchToggle: true,\n      // 合计条数\n      total: 0,\n      // 用户信息弹出框\n      divShow: 'query',\n      // 修改密码弹出框\n      openPassword: false,\n      // 查询参数\n      queryParams: {\n        queryText: undefined,\n        pageIndex: 1,\n        pageSize: 10,\n        orderby: 'createTime',\n        sort: 'descending'\n      },\n      // 用户列表\n      userTable: [],\n      // 用户角色列表\n      userRoleTable: [],\n      // 删除用户列表\n      delSelections: [],\n      // 查询用户列表\n      userSelections: [],\n      // 用户权限树\n      relationTree: [],\n      // 用户角色\n      userRole: [],\n      // 表单\n      form: {},\n      // 密码表单\n      passwordForm: {},\n      // 表单标题\n      title: '',\n      // 表单校验\n      rules: {\n        userID: [{\n          required: true,\n          message: '用户编号不能为空',\n          trigger: 'blur'\n        }],\n        userName: [{\n          required: true,\n          message: '用户名称不能为空',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '用户密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '用户密码长度至少6位',\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '性别不能为空',\n          trigger: 'blur'\n        }]\n      },\n      // 重置密码表单校验\n      passwordRules: {\n        password: [{\n          required: true,\n          message: '用户密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '用户密码长度至少6位',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '确认密码不能为空',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '用户密码长度至少6位',\n          trigger: 'blur'\n        }]\n      },\n      // 重置密码用户\n      ResetPasswordUserId: '',\n      // 过滤查询\n      search: '',\n      defaultProps: {\n        children: 'children',\n        label: 'relationName'\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    handleSearch: function handleSearch() {\n      this.searchToggle = !this.searchToggle;\n    },\n\n    /** 查询菜单列表 */\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      (0, _users.queryUsers)(this.queryParams).then(function (response) {\n        _this.userTable = response.data;\n        _this.total = _this.userTable.totalCount;\n        _this.loading = false;\n      });\n    },\n\n    /** 新增按钮操作 */\n    handleCreate: function handleCreate() {\n      this.reset();\n      this.divShow = 'edit';\n      this.title = '添加用户';\n      this.activeName = 'userInfo';\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      this.reset();\n      this.form = row;\n      delete this.form.password;\n      this.divShow = 'edit';\n      this.title = '编辑用户';\n      this.activeName = 'userInfo';\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    handleReset: function handleReset() {\n      this.queryParams.queryText = '';\n      this.getList();\n    },\n    // 删除按钮操作\n    handleDelete: function handleDelete() {\n      var _this2 = this;\n\n      this.delSelections = [];\n      this.$refs.userTable.selection.forEach(function (element) {\n        _this2.delSelections.push(element.userID);\n      });\n\n      if (this.delSelections.length === 0) {\n        return;\n      }\n\n      this.$confirm('是否确认删除选中的 ' + this.delSelections.length + ' 条数据?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _users.deleteUsers)({\n          userIds: _this2.delSelections\n        }).then(function (response) {\n          if (response.statusCode === 200) {\n            _this2.$message({\n              message: '成功删除' + response.data + '条数据',\n              type: 'success'\n            });\n\n            _this2.getList();\n          }\n        });\n      }).catch(function () {});\n    },\n    // 重置密码\n    handleResetPassword: function handleResetPassword(row) {\n      this.ResetPasswordUserId = row.userID;\n      this.reset();\n      this.openPassword = true;\n    },\n    // 启用用户\n    handleEnableUsers: function handleEnableUsers() {\n      var _this3 = this;\n\n      if (this.$refs.userTable.selection.length > 0) {\n        this.userSelections = [];\n        this.$refs.userTable.selection.forEach(function (element) {\n          _this3.userSelections.push(element.userID);\n        });\n        (0, _users.enableUsers)({\n          userIds: this.userSelections,\n          status: true\n        }).then(function (response) {\n          if (response.statusCode === 200) {\n            _this3.$message({\n              message: '修改成功',\n              type: 'success'\n            });\n\n            _this3.getList();\n          }\n        });\n      } else {\n        this.$message({\n          message: '请至少选择一项',\n          type: 'warning'\n        });\n      }\n    },\n    // 禁用用户\n    handleDisabledUsers: function handleDisabledUsers() {\n      var _this4 = this;\n\n      if (this.$refs.userTable.selection.length > 0) {\n        this.userSelections = [];\n        this.$refs.userTable.selection.forEach(function (element) {\n          _this4.userSelections.push(element.userID);\n        });\n        (0, _users.enableUsers)({\n          userIds: this.userSelections,\n          status: false\n        }).then(function (response) {\n          if (response.statusCode === 200) {\n            _this4.$message({\n              message: '修改成功',\n              type: 'success'\n            });\n\n            _this4.getList();\n          }\n        });\n      } else {\n        this.$message({\n          message: '请至少选择一项',\n          type: 'warning'\n        });\n      }\n    },\n    // 新建用户提交按钮\n    submitUserForm: function submitUserForm() {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this5.title !== '添加用户') {\n            (0, _users.updateUser)(_this5.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this5.$message({\n                  message: '修改成功',\n                  type: 'success'\n                });\n\n                _this5.divShow = 'query';\n\n                _this5.getList();\n              }\n            });\n          } else {\n            (0, _users.createUser)(_this5.form).then(function (response) {\n              if (response.statusCode === 200) {\n                _this5.$message({\n                  message: '新增成功',\n                  type: 'success'\n                });\n\n                _this5.title = '编辑用户';\n\n                _this5.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n    // 用户角色提交按钮\n    submitRoleForm: function submitRoleForm() {},\n    // 用户权限提交按钮\n    submitPowerForm: function submitPowerForm() {\n      var _this6 = this;\n\n      var relation = [];\n      this.$refs.relationTree.selection.forEach(function (val) {\n        relation.push({\n          objectID: val.id,\n          objectType: val.relationType\n        });\n      });\n      (0, _authorize.UpdateUserRelation)({\n        userID: this.form.userID,\n        relation: relation\n      }).then(function (response) {\n        if (response.statusCode === 200) {\n          _this6.$message({\n            message: '更新权限成功',\n            type: 'success'\n          });\n        } else {\n          _this6.$message.error(response.message);\n        }\n      });\n    },\n    // 用户绑定微信提交按钮\n    submitWexinForm: function submitWexinForm() {},\n    // 排序操作\n    handleSortable: function handleSortable(val) {\n      this.queryParams.orderby = val.prop;\n      this.queryParams.sort = val.order;\n      this.getList();\n    },\n    // 重置密码提交\n    submitPasswordForm: function submitPasswordForm() {\n      var _this7 = this;\n\n      this.$refs['passwordForm'].validate(function (valid) {\n        if (valid) {\n          if (_this7.passwordForm.password !== _this7.passwordForm.confirmPassword) {\n            _this7.$message.error('两次密码输入不一致');\n\n            return;\n          }\n\n          (0, _users.resetPassword)({\n            userID: _this7.ResetPasswordUserId,\n            confirmPassword: _this7.passwordForm.password\n          }).then(function (response) {\n            if (response.statusCode === 200) {\n              _this7.$message({\n                message: '密码重置成功',\n                type: 'success'\n              });\n\n              _this7.openPassword = false;\n            } else {\n              _this7.$message.error(response.message);\n            }\n          });\n        }\n      });\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        userID: undefined,\n        userName: undefined,\n        nickName: undefined,\n        email: undefined,\n        password: undefined,\n        sex: '男',\n        avatarUrl: undefined,\n        qq: undefined,\n        phone: undefined,\n        provinceID: undefined,\n        province: undefined,\n        cityID: undefined,\n        city: undefined,\n        countyID: undefined,\n        county: undefined,\n        address: undefined,\n        remark: undefined,\n        identityCard: undefined,\n        birthday: undefined,\n        enabled: true,\n        oneSession: true\n      };\n      this.passwordForm = {\n        password: undefined,\n        confirmPassword: undefined\n      };\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.divShow = 'query';\n      this.openPassword = false;\n      this.reset();\n      this.getList();\n    },\n    // 全选勾选\n    handleRelationTreeSelectAll: function handleRelationTreeSelectAll() {\n      this.selectionParentRowAll(this.relationTree);\n    },\n    // 全选\n    selectionParentRowAll: function selectionParentRowAll(data, selection) {\n      var _this8 = this;\n\n      if (data) {\n        data.forEach(function (val) {\n          _this8.$refs.relationTree.toggleRowSelection(val, true);\n\n          if (val.children) {\n            _this8.selectionParentRowAll(val.children);\n          }\n        });\n      }\n    },\n    // RelationTree 勾选行\n    handleRelationTreeSelect: function handleRelationTreeSelect(selection, row) {\n      if (selection.length && selection.indexOf(row) !== -1) {\n        this.selectionParentRow(row.parentUID, this.relationTree);\n      } else {\n        // 父节点取消时取消子节点勾选\n        this.unselectionRow(row);\n      }\n    },\n    // 递归勾选\n    selectionParentRow: function selectionParentRow(parentUID, data) {\n      var _this9 = this;\n\n      data.forEach(function (row) {\n        if (row.id === parentUID) {\n          _this9.$refs.relationTree.toggleRowSelection(row, true);\n\n          if (row.parentUID) {\n            _this9.selectionParentRow(row.parentUID, _this9.relationTree);\n          }\n\n          return;\n        }\n\n        if (row.children) {\n          _this9.selectionParentRow(parentUID, row.children);\n        }\n      });\n    },\n    // 取消勾选\n    unselectionRow: function unselectionRow(row) {\n      var _this10 = this;\n\n      if (row.children) {\n        row.children.forEach(function (children) {\n          _this10.$refs.relationTree.toggleRowSelection(children, false);\n\n          if (children) {\n            _this10.unselectionRow(children);\n          }\n        });\n      }\n    },\n    // 用户权限修改\n    handleTabsClick: function handleTabsClick(val) {\n      var _this11 = this;\n\n      if (val.index === '1') {\n        this.loading = true;\n        (0, _authorize.GetRelationTree)(this.form.userID).then(function (response) {\n          _this11.relationTree = response.data;\n\n          _this11.selectUserRole(_this11.relationTree);\n\n          _this11.loading = false;\n        });\n      }\n    },\n    // 匹配用户权限勾选\n    selectUserRole: function selectUserRole(data) {\n      var _this12 = this;\n\n      if (data) {\n        data.forEach(function (val) {\n          if (val.hasRelation) {\n            _this12.$nextTick(function () {\n              _this12.$refs.relationTree.toggleRowSelection(val, true);\n            });\n          }\n\n          if (val) {\n            _this12.selectUserRole(val.children);\n          }\n        });\n      }\n    },\n    // row样式赋值\n    tableRowClassName: function tableRowClassName(row, rowIndex) {\n      switch (row.row.relationType) {\n        case 'Company':\n          return 'company-row';\n\n        case 'Factory':\n          return 'factory-row';\n\n        case 'WorkShop':\n          return 'workShop-row';\n\n        case 'ProductLine':\n          return 'productLine-row';\n\n        case 'ProductProcess':\n          return 'productProcess-row';\n\n        default:\n          break;\n      }\n    }\n  }\n};\nexports.default = _default;",null]}